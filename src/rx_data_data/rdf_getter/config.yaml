# This config file is used to configure the behaviour of RDFGetter

#If a column ins not found in a dataframe, it will be added according to the following definitions
redefinitions:
  block             : 'block < 0 ? 0 : block' # This is needed to process pre-UT data as Block 0 data, temporary
definitions:
  common: &common
    th_l1_l2          : TVector3 v1(L1_PX, L1_PY, L1_PZ); TVector3 v2(L2_PX, L2_PY, L2_PZ); return v1.Angle(v2);
    th_l1_kp          : TVector3 v1(L1_PX, L1_PY, L1_PZ); TVector3 v2( H_PX,  H_PY,  H_PZ); return v1.Angle(v2);
    th_l2_kp          : TVector3 v1(L2_PX, L2_PY, L2_PZ); TVector3 v2( H_PX,  H_PY,  H_PZ); return v1.Angle(v2);
    L1_TRACK_PT       : ROOT::Math::XYZVector lep(L1_TRACK_PX, L1_TRACK_PY, L1_TRACK_PZ); return lep.rho();
    L1_TRACK_ETA      : ROOT::Math::XYZVector lep(L1_TRACK_PX, L1_TRACK_PY, L1_TRACK_PZ); return lep.eta();
    L1_TRACK_PHI      : ROOT::Math::XYZVector lep(L1_TRACK_PX, L1_TRACK_PY, L1_TRACK_PZ); return lep.phi();
    L1_TRACK_P        : ROOT::Math::XYZVector lep(L1_TRACK_PX, L1_TRACK_PY, L1_TRACK_PZ); return lep.r();

    L2_TRACK_PT       : ROOT::Math::XYZVector lep(L2_TRACK_PX, L2_TRACK_PY, L2_TRACK_PZ); return lep.rho();
    L2_TRACK_ETA      : ROOT::Math::XYZVector lep(L2_TRACK_PX, L2_TRACK_PY, L2_TRACK_PZ); return lep.eta();
    L2_TRACK_PHI      : ROOT::Math::XYZVector lep(L2_TRACK_PX, L2_TRACK_PY, L2_TRACK_PZ); return lep.phi();
    L2_TRACK_P        : ROOT::Math::XYZVector lep(L2_TRACK_PX, L2_TRACK_PY, L2_TRACK_PZ); return lep.r();
    Jpsi_const_mass_M : TMath::Sqrt(TMath::Power(Jpsi_DTF_HEAD_PE, 2) - TMath::Power(Jpsi_DTF_HEAD_PX, 2) - TMath::Power(Jpsi_DTF_HEAD_PY, 2) - TMath::Power(Jpsi_DTF_HEAD_PZ, 2))
    q2                : Jpsi_Mass * Jpsi_Mass # Jpsi_Mass is the brem corrected mass
    q2_track          : ROOT::Math::PtEtaPhiMVector l1(L1_TRACK_PT, L1_TRACK_ETA, L1_TRACK_PHI, 0.511);
                        ROOT::Math::PtEtaPhiMVector l2(L2_TRACK_PT, L2_TRACK_ETA, L2_TRACK_PHI, 0.511);
                        auto ll = l1 + l2;
                        return ll.M2();
  EE:
    Jpsi_Mass         : Jpsi_M_brem_track_2 # Use brem corrected masses only for electron channel
    B_Mass            : B_M_brem_track_2
    Jpsi_Mass_smr     : Jpsi_M_smr_brem_track_2 # These are brem corrected and smeared masses. Smeared for data/mc differences
    B_Mass_smr        : B_M_smr_brem_track_2
    q2_smr            : Jpsi_Mass_smr * Jpsi_Mass_smr
    nbrem             : int(L1_HASBREMADDED_brem_track_2) + int(L2_HASBREMADDED_brem_track_2) # Will use the new definition of brem
    <<: *common
  MM:
    Jpsi_Mass         : Jpsi_M
    B_Mass            : B_M
    nbrem             : '0'
    <<: *common
trees:
  main : main # This is the name of the file holding the main (not friend) trees, e.g. main.yaml
  electron_only: # These are the yaml files with friend trees meant for only the electrons
    - brem_track_2.yaml
